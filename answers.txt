3. Passing parameter 
Question: Is JAVA a Pass by Value or a Pass by Reference programming language?
Answer: Java is a Pass by Value programming language. When you pass an object reference to a method, you're passing a copy of the reference, not the actual object itself. Changes made to this copy within the method do not affect the original object outside of the method.

Question: After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
objects still remain?
Answer: When you pass jungleDVD and cinderellaDVD objects to the method 'swap', you are passing the copies of the references to those objects, not the objects themselves. When you swap the references inside the swap method, you're only modifying the local copies of those references instead of the original objects. Hence, the title of these two objects remain the same after running 'swap' method.

Question: After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
the title of the JungleDVD changed?
Answer: When you pass object jungleDVD to method changeTitle, you're passing a copy of the reference to that object. The method operates on the same object as the one passed into it because the contents of the original reference and its copy are the same. Therefore, any changes made to the object's state inside the method will affect the original object outside of the method.
